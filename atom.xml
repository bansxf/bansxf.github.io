<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
    <title type="text">黄粱一梦</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2022-12-03T18:52:52&#43;08:00</updated>
    <id>https://bansxf.github.io/</id>
    <link rel="alternate" type="text/html" href="https://bansxf.github.io/" />
    <link rel="self" type="application/atom&#43;xml" href="https://bansxf.github.io/atom.xml" />
    <author>
            <name>bansxf</name>
            <uri>https://bansxf.github.io/</uri>
            
                <email>bansxf@126.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.89.0">Hugo</generator>
        <entry>
            <title type="text">清除用户名和密码</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/git/%E6%B8%85%E9%99%A4%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/" />
            <id>https://bansxf.github.io/posts/git/%E6%B8%85%E9%99%A4%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/</id>
            <updated>2022-12-03T18:52:43&#43;08:00</updated>
            <published>2022-12-03T18:42:34&#43;08:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">仅供学习参考</summary>
            
                <content type="html">&lt;p&gt;在使用&lt;code&gt;git push&lt;/code&gt;，解决电脑里的其他干扰账号。&lt;/p&gt;
&lt;p&gt;运行下列清除用户名密码的指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git credential-manager uninstall
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/git/" term="Git" label="Git" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/" term="解决问题" label="解决问题" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">CSRF漏洞</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/csrf%E6%BC%8F%E6%B4%9E/" />
            <id>https://bansxf.github.io/posts/web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/csrf%E6%BC%8F%E6%B4%9E/</id>
            <updated>2022-12-02T20:24:14&#43;08:00</updated>
            <published>2021-11-11T22:23:23&#43;08:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">仅供学习参考</summary>
            
                <content type="html">&lt;p&gt;CSRF又叫跨站请求伪造，是一种Web漏洞。&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;CSRF（Cross-site request forery,跨站请求伪造）也被称为One Click Attack或者Session Riding ,通常缩写为CSRF或者XSRF&lt;/p&gt;
&lt;p&gt;参数被被恶意攻击者猜测到，利用目标用户的合法身份，忽悠目标用户点击链接，完成某些非法操作。典型例子：QQ空间自动转发说说。&lt;/p&gt;
&lt;p&gt;防御：&lt;/p&gt;
&lt;p&gt;验证http referer字段&lt;/p&gt;
&lt;p&gt;在请求地址中添加token，并验证&lt;/p&gt;
&lt;p&gt;在http头中自定属性并验证&lt;/p&gt;
&lt;p&gt;get型csrf利用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https://target.php?uname=123 passworld=123&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;post csrf利用：设置form表单提交&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hidden&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;1111&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;自动化探测&#34;&gt;自动化探测&lt;/h2&gt;
&lt;h3 id=&#34;burp探测&#34;&gt;burp探测&lt;/h3&gt;
&lt;p&gt;特征：&lt;/p&gt;
&lt;p&gt;重放请求，无一次性token或验证码&lt;/p&gt;
&lt;p&gt;referer去掉后重放请求，无referer验证&lt;/p&gt;
&lt;p&gt;去掉token后重放，后端认证机制薄弱&lt;/p&gt;
&lt;h3 id=&#34;csrftester探测&#34;&gt;CSRFTester探测&lt;/h3&gt;
&lt;p&gt;代理抓取链接和表单信息通过在工具中修改，再重新提交，如果测试的请求被网站服务器所接受，那么存在csrf漏洞。&lt;/p&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;p&gt;1.设置浏览器代理:127.0.0.1:8008&lt;/p&gt;
&lt;p&gt;2.登录web应用程序，提交表单，在csrf工具中修改表单内容，查看是否更改，如更改表面存在csrf漏洞。&lt;/p&gt;
&lt;p&gt;3.生产poc（观点验证程序）代码。&lt;/p&gt;
&lt;h2 id=&#34;漏洞利用&#34;&gt;漏洞利用&lt;/h2&gt;
&lt;p&gt;漏洞实质是服务器无法判断当前请求是否是合法账户的自定义请求。&lt;/p&gt;
&lt;p&gt;使用服务器搭建csrf poc访问页面，在kali中,/var/www/html,下的index.html要被替换为工具生成的index.html（或者用一个站点的页面嵌入poc代码） ，修改一下ip,类似下面这句&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;form10&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http://127.0.0.1:80/espcms/espcms_admin/index.php?act=tExyZnjRRCSmgu2bgcaOZesWvaDlNc6yRugESP1ac3Y=&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;127.0.0.1改为目标站点地址，在合法用户登录后并点击了该链接，即可达成攻击目的。&lt;/p&gt;
&lt;h3 id=&#34;get型利用&#34;&gt;get型利用&lt;/h3&gt;
&lt;p&gt;链接利用：a&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;iframe利用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;iframe&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;display:none&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;img标签利用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;css中background利用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;style&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;background:url()&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;漏洞防御&#34;&gt;漏洞防御&lt;/h2&gt;
&lt;h3 id=&#34;token防御&#34;&gt;token防御&lt;/h3&gt;
&lt;p&gt;用户登录后，服务器会发给用户一个唯一的合法令牌，会随用户form表单中的value隐藏提交。&lt;/p&gt;
&lt;p&gt;登录验证成功后，再会话session[“user_token”]中保存token。&lt;/p&gt;
&lt;p&gt;在后台操作中，增删改表单中添加隐藏域hidden，设置value为token。&lt;/p&gt;
&lt;p&gt;提交之后进行验证token是否正确。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;防御措施&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成一个随机且不被轻易猜测的参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;token泄露&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;get型token泄露：页面包含&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;那么请求中的referer就会携带对应的get token.&lt;/p&gt;
&lt;p&gt;post型token泄露：&lt;/p&gt;
&lt;p&gt;利用xss漏洞读取cookie,获取讯处在其中的token值。&lt;/p&gt;
&lt;h3 id=&#34;referer防御&#34;&gt;referer防御&lt;/h3&gt;
&lt;p&gt;referer用来告诉服务器该请求来自哪个页面。&lt;/p&gt;
&lt;p&gt;代码编写：
绕过技巧：创建一个带目标服务器的ip的目录
burp自动生成poc:pro&lt;/p&gt;
&lt;h3 id=&#34;验证码防御&#34;&gt;验证码防御&lt;/h3&gt;
&lt;p&gt;并不能每部 都用验证码，并不是主要防御方法。&lt;/p&gt;
&lt;h3 id=&#34;referer-check防御&#34;&gt;referer check防御&lt;/h3&gt;
&lt;p&gt;主要用于防止盗链，同理也可以用于检查请求是否来自合法的源&lt;/p&gt;
&lt;p&gt;缺陷：不是任何时候都会携带referer头，如https转http&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/" term="Web安全漏洞" label="Web安全漏洞" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/csrf/" term="CSRF" label="CSRF" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">CORS配置错误漏洞</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/cors%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF%E6%BC%8F%E6%B4%9E/" />
            <id>https://bansxf.github.io/posts/web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/cors%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF%E6%BC%8F%E6%B4%9E/</id>
            <updated>2022-12-02T20:30:10&#43;08:00</updated>
            <published>2021-11-11T20:02:20&#43;08:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">仅供学习参考</summary>
            
                <content type="html">&lt;p&gt;CORS又叫跨域资源共享&lt;/p&gt;
&lt;h2 id=&#34;cors实现请求跨域&#34;&gt;CORS实现请求跨域&lt;/h2&gt;
&lt;p&gt;转载于：https://blog.csdn.net/badmoonc/article/details/82706246&lt;/p&gt;
&lt;h3 id=&#34;简介&#34;&gt;简介&lt;/h3&gt;
&lt;p&gt;CORS：全称&amp;quot;跨域资源共享&amp;quot;（Cross-origin resource sharing）。&lt;/p&gt;
&lt;p&gt;CORS需要浏览器和服务器同时支持，才可以实现跨域请求，目前几乎所有浏览器都支持CORS，IE则不能低于IE10。CORS的整个过程都由浏览器自动完成，前端无需做任何设置，跟平时发送ajax请求并无差异。so，实现CORS的关键在于服务器，只要服务器实现CORS接口，就可以实现跨域通信。&lt;/p&gt;
&lt;h3 id=&#34;请求类型&#34;&gt;请求类型：&lt;/h3&gt;
&lt;p&gt;CORS分为简单请求和非简单请求(需预检请求)两类&lt;/p&gt;
&lt;p&gt;符合以下条件的，为简单请求&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;请求方式使用下列方法之一：
GET
HEAD
POST

Content-Type 的值仅限于下列三者之一：
text/plain
multipart/form-data
application/x-www-form-urlencoded
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;对于简单请求，浏览器会直接发送CORS请求，具体说来就是在header中加入origin请求头字段。同样，在响应头中，返回服务器设置的相关CORS头部字段，Access-Control-Allow-Origin字段为允许跨域请求的源。请求时浏览器在请求头的Origin中说明请求的源，服务器收到后发现允许该源跨域请求，则会成功返回，具体如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/1.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;在这里，http://localhost:3001为我们当前发送请求的源，如果服务器发现请求在指定的源范围内，则会返回响应的请求结果，  否则会在控制台报错，如下图所示，在这里需要注意的是，尽管请求失败，但返回的状态码依然可能为200。所以在做处理时需要格外注意。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/2.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;非简单请求(预检请求)&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;使用了下面任一 HTTP 方法：
PUT
DELETE
CONNECT
OPTIONS
TRACE
PATCH
 
Content-Type 的值不属于下列之一:
application/x-www-form-urlencoded
multipart/form-data
text/plain
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当发生符合非简单请求（预检请求）的条件时，浏览器会自动先发送一个options请求，如果发现服务器支持该请求，则会将真正的请求发送到后端，反之，如果浏览器发现服务端并不支持该请求，则会在控制台抛出错误，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/3.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果非简单请求（预检请求）发送成功，则会在头部多返回以下字段&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Access-Control-Allow-Origin: http://localhost:3001  //该字段表明可供那个源跨域
Access-Control-Allow-Methods: GET, POST, PUT        // 该字段表明服务端支持的请求方法
Access-Control-Allow-Headers: X-Custom-Header       // 实际请求将携带的自定义请求首部字段
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下图为一个预检请求实例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/4.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;红框标注的为预检请求发送的查询，服务端支持我们的请求后，将会发送我们真正的请求，图中绿框所示。可以看到，真正的请求响应头字段多处蓝框中所圈字段。这为服务器所支持cors请求类型和允许的自定义请求首部字段，以及支持跨域的源。&lt;/p&gt;
&lt;h3 id=&#34;实例代码&#34;&gt;实例代码&lt;/h3&gt;
&lt;p&gt;前端代码与发送普通请求没有差异，我们只需在服务端设置即可，以node为例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var express = require(&#39;express&#39;);
var app = express();
var allowCrossDomain = function (req, res, next) {
  res.header(&#39;Access-Control-Allow-Origin&#39;, &#39;http://localhost:3001&#39;);
  res.header(&#39;Access-Control-Allow-Methods&#39;, &#39;GET,PUT,POST,DELETE&#39;);
  res.header(&#39;Access-Control-Allow-Headers&#39;, &#39;Content-Type&#39;);
  next();
}
app.use(allowCrossDomain);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来，http://localhost:3001下的GET,PUT,POST,DELETE请求，自定义首部字段为Content-Type的非简单请求则会被正常访问，当然，你也可以将Access-control-Allow-Methods和Access-Control-Allow-Headers这两个配置删掉，删掉之后，将仅支持简单请求进行跨域。&lt;/p&gt;
&lt;h3 id=&#34;cors字段介绍&#34;&gt;CORS字段介绍：&lt;/h3&gt;
&lt;p&gt;（1）Access-Control-Allow-Methods&lt;/p&gt;
&lt;p&gt;该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次&amp;quot;预检&amp;quot;请求。&lt;/p&gt;
&lt;p&gt;（2）Access-Control-Allow-Headers&lt;/p&gt;
&lt;p&gt;如果浏览器请求包括Access-Control-Request-Headers字段，则Access-Control-Allow-Headers字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在&amp;quot;预检&amp;quot;中请求的字段。&lt;/p&gt;
&lt;p&gt;（3）Access-Control-Allow-Credentials&lt;/p&gt;
&lt;p&gt;该字段与简单请求时的含义相同。&lt;/p&gt;
&lt;p&gt;（4）Access-Control-Max-Age&lt;/p&gt;
&lt;p&gt;该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结：&lt;/h3&gt;
&lt;p&gt;总的来说，使用CORS简单请求，非常容易，对于前端来说无需做任何配置，与发送普通ajax请求无异。唯一需要注意的是，需要携带cookie信息时，需要将withCredentials设置为true即可。CORS的配置，完全在后端设置，配置起来也比较容易，目前对于大部分浏览器兼容性也比较好。CORS优势也比较明显，可以实现任何类型的请求，相较于JSONP跨域只能使用get请求来说，也更加的便于我们使用。关于jsonp跨域请求的实现，可以参照我另外一篇文章jsonp跨域原理：https://blog.csdn.net/badmoonc/article/details/82289252&lt;/p&gt;
&lt;h2 id=&#34;cors漏洞利用&#34;&gt;CORS漏洞利用&lt;/h2&gt;
&lt;p&gt;配合XSS&lt;/p&gt;
&lt;p&gt;高级利用&lt;/p&gt;
&lt;h2 id=&#34;cors漏洞防御&#34;&gt;CORS漏洞防御&lt;/h2&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.freebuf.com/articles/web/204023.html&#34;&gt;https://www.freebuf.com/articles/web/204023.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/liu_xue_xue/article/details/107870251&#34;&gt;https://blog.csdn.net/liu_xue_xue/article/details/107870251&lt;/a&gt;&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/" term="Web安全漏洞" label="Web安全漏洞" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/cors/" term="CORS" label="CORS" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Hugo图片插入问题</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/hugo/hugo%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E9%97%AE%E9%A2%98/" />
            <id>https://bansxf.github.io/posts/hugo/hugo%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5%E9%97%AE%E9%A2%98/</id>
            <updated>2022-12-02T20:54:37&#43;08:00</updated>
            <published>2021-11-03T15:43:51&#43;08:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">&lt;p&gt;博客发布时遇到的一个问题。&lt;/p&gt;</summary>
            
                <content type="html">&lt;p&gt;博客发布时遇到的一个问题。&lt;/p&gt;
&lt;p&gt;原因：&lt;/p&gt;
&lt;p&gt;Hugo图片插入，看到的其他人的做法大多是将其放在一个目录下，比如说static.&lt;/p&gt;
&lt;p&gt;但是我的vim插件使用的相对路径，图片都保存到当前目录下的pic文件夹中。在生成网页后，也全部采用的相对路径，导致图片路径未找到。&lt;/p&gt;
&lt;p&gt;好在，hugo应该是提供了解决方案的，之前还在困惑说为什么一个md文件，hugo会生成这个名字的目录，然后再是index.html。在这里同样利用一下。&lt;/p&gt;
&lt;p&gt;方法一：（不推荐）&lt;/p&gt;
&lt;p&gt;typora图片位置为&lt;code&gt;./&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建一个名为Test文件夹，文件夹内创建一个Test.md，添加图片后，将Test.md移动到与文件夹同级&lt;/p&gt;
&lt;p&gt;方法二：&lt;/p&gt;
&lt;p&gt;不直接生成md文件作为某一篇post，而是新建文件夹，然后在其中创建文件夹，文件夹中存放index.md才是post的内容，多了一层。这样的好处就是，在这个post目录下，图片的pic文件夹就和md文件同级，可以引用，同时，hugo也会生成相应的目录，完美解决了图片的问题。&lt;/p&gt;
&lt;p&gt;采用方法二：&lt;/p&gt;
&lt;p&gt;使用hugo命令进行创建新文章&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new posts/Hugo图片插入问题/index.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;typora设置图片格式为&lt;code&gt;./images&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;效果如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/image-20211103154136061.png&#34; alt=&#34;image-20211103154136061&#34;&gt;&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/hugo/" term="Hugo" label="Hugo" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/" term="解决问题" label="解决问题" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">搭建hugo博客</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/hugo/%E6%90%AD%E5%BB%BAhugo%E5%8D%9A%E5%AE%A2/" />
            <id>https://bansxf.github.io/posts/hugo/%E6%90%AD%E5%BB%BAhugo%E5%8D%9A%E5%AE%A2/</id>
            <updated>2022-12-03T18:52:15&#43;08:00</updated>
            <published>2021-11-03T14:20:16&#43;08:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">&lt;p&gt;记录博客搭建过程。&lt;/p&gt;</summary>
            
                <content type="html">&lt;p&gt;记录博客搭建过程。&lt;/p&gt;
&lt;h2 id=&#34;初始化环境&#34;&gt;初始化环境&lt;/h2&gt;
&lt;p&gt;下载hugo-ex&amp;hellip;&lt;/p&gt;
&lt;p&gt;添加到环境变量中&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new site hugo-blog
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;主题&#34;&gt;主题&lt;/h2&gt;
&lt;p&gt;找一个主题下载&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/adityatelange/hugo-PaperMod.git themes/hugo-PaperMod
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;主题示例配置
https://adityatelange.github.io/hugo-PaperMod/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;部署&#34;&gt;部署&lt;/h2&gt;
&lt;p&gt;这部分需要使用到一个叫做github page的东西，是GitHub提供的一个网页寄存服务，可以寄存静态页面，这个特性就特别适合博客的搭建。&lt;/p&gt;
&lt;p&gt;首先再Github上创建一个 Repository，命名为Github名字.github.io，譬如我的仓库bansxf.github.io，这样就可以生成一个用户页面&lt;/p&gt;
&lt;p&gt;在hugo server调式页面完成后，使用命令hugo生成hugo静态页面。&lt;/p&gt;
&lt;p&gt;**注意！！！**在生成静态页面之前要把config.toml文件中的baseURL修改为自己博客的网址，譬如&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nv&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://bansxf.github.io/&amp;#34;&lt;/span&gt;
hugo    &lt;span class=&#34;c1&#34;&gt;##生成静态页面文件&lt;/span&gt;
hugo -D &lt;span class=&#34;c1&#34;&gt;##连带着草稿一起生成静态文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在命令执行后，出现一个public文件夹，里面就是网站的静态页面文件，进入public文件夹，使用git上传文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
git init
git add .
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;first commit&amp;#34;&lt;/span&gt;
git branch -M main
git remote add origin git@github.com:bansxf/bansxf.github.io.git
git push -u origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在此之后更新文章，使用hugo生成新的静态页面，后使用&lt;code&gt;git push&lt;/code&gt;进行上传，&lt;code&gt;commit -m&lt;/code&gt; 后面的东西是此次提交的备注。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;add blog post&amp;#34;&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/hugo/" term="Hugo" label="Hugo" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/blog/" term="blog" label="blog" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">Google Hacking</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/google-hacking/" />
            <id>https://bansxf.github.io/posts/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/google-hacking/</id>
            <updated>2022-12-02T20:21:00&#43;08:00</updated>
            <published>2019-05-03T18:21:04&#43;00:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">&lt;p&gt;google搜索语法&lt;/p&gt;</summary>
            
                <content type="html">&lt;p&gt;google搜索语法&lt;/p&gt;
&lt;h2 id=&#34;googlehacking语法库&#34;&gt;googleHacking语法库&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.exploit-db.com/google-hacking-database&#34;&gt;https://www.exploit-db.com/google-hacking-database&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;高级语法&#34;&gt;高级语法&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;关键字&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;site&lt;/td&gt;
&lt;td&gt;指定搜索域名（例：site:baidi.com）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;inurl&lt;/td&gt;
&lt;td&gt;指定url中是否含有某些关键字（例：inurl:.php?id=）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;intext&lt;/td&gt;
&lt;td&gt;指定页面是否含有某些关键字(例：intext:网站管理)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;filetype&lt;/td&gt;
&lt;td&gt;指定搜索文件类型（例：filetype:txt）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;intitle&lt;/td&gt;
&lt;td&gt;指定网页标题是否含有某些关键字（例：intitle:后台管理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;link&lt;/td&gt;
&lt;td&gt;指定网页链接（例：link:baidu.com 指定与百度做了外链的站点）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;info&lt;/td&gt;
&lt;td&gt;指定搜索网页信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cache&lt;/td&gt;
&lt;td&gt;显示页面的缓存版本&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;numberange&lt;/td&gt;
&lt;td&gt;搜索一个数字&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;通配符&#34;&gt;通配符&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;通配符&lt;/th&gt;
&lt;th&gt;语义&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;包含关键字&lt;/td&gt;
&lt;td&gt;+前面必须有一个空格&lt;/td&gt;
&lt;td&gt;admin +login&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;排除关键字&lt;/td&gt;
&lt;td&gt;-前面必须有一个空格&lt;/td&gt;
&lt;td&gt;mysql -csdn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;同义词&lt;/td&gt;
&lt;td&gt;同上&lt;/td&gt;
&lt;td&gt;mysql ~csdn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;模糊查询&lt;/td&gt;
&lt;td&gt;*代替任意字符&lt;/td&gt;
&lt;td&gt;mysql**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;quot;&amp;quot;&lt;/td&gt;
&lt;td&gt;强调&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&amp;ldquo;mysql&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;google&#34;&gt;google&lt;/h2&gt;
&lt;p&gt;黑客专用信息和资料搜索地址为：
&lt;a href=&#34;http://www.google.com/custom?hl=xx-hacker&#34;&gt;http://www.google.com/custom?hl=xx-hacker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里是google关键字的用法，要设置它为中文，则是
&lt;a href=&#34;http://www.google.com/custom?hl=zh-CN&#34;&gt;http://www.google.com/custom?hl=zh-CN&lt;/a&gt;
英文则是http://www.google.com/custom?hl=en&lt;/p&gt;
&lt;h2 id=&#34;示例&#34;&gt;示例&lt;/h2&gt;
&lt;p&gt;搜索目录&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;intext:index of /|../|parent Directory
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;搜索上传页面：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;inurl:upload site:17173.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;搜索后台/登录页面：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;intitle:后台 site:tflamps.com
inurl:/admin intext:后台管理系统
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;搜索可能存在注入的页面：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;inurl:?id= site:wd-bearings.com
site:xxx.edu.cn inurl:?=
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;搜索可能存在文件包含的页面：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;inurl:?file= site:hkjc.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;谷歌语法子域名：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;site:*.xx.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;目录搜索：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;parent directory site:testfire.net
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/xielinrui123/article/details/88866969&#34;&gt;https://blog.csdn.net/xielinrui123/article/details/88866969&lt;/a&gt;&lt;/p&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/" term="信息收集" label="信息收集" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/%E6%90%9C%E7%B4%A2/" term="搜索" label="搜索" />
                            
                        
                    
                
            
        </entry>
    
        <entry>
            <title type="text">搭建Hexo博客</title>
            <link rel="alternate" type="text/html" href="https://bansxf.github.io/posts/hexo/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/" />
            <id>https://bansxf.github.io/posts/hexo/%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</id>
            <updated>2022-12-03T10:52:08&#43;08:00</updated>
            <published>2018-12-08T12:11:03&#43;00:00</published>
            <author>
                    <name>bansxf</name>
                    <uri>https://bansxf.github.io</uri>
                    <email>bansxf@126.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">Hexo + Github 搭建 Blog 和 每次博客的部署
 准备工作 1.安装git</summary>
            
                <content type="html">&lt;p&gt;Hexo + Github 搭建 Blog 和 每次博客的部署&lt;/p&gt;
&lt;hr&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;1.安装git&lt;/p&gt;
&lt;p&gt;git下载地址：&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;链接&lt;/a&gt;
安装后验证&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git --version
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;出现类似下面的版本号，皆为成功
git version 2.19.2.windows.1&lt;/p&gt;
&lt;p&gt;2.安装node（其附带npm）&lt;/p&gt;
&lt;p&gt;node.js下载地址：&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;链接&lt;/a&gt;
安装后验证&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;node -v
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;出现类似下面的版本号(安装最新版本)：
v10.14.1&lt;/p&gt;
&lt;p&gt;3.安装Hexo
命令行输入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;npm install -g hexo-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;4.创建本地运行库&lt;/p&gt;
&lt;p&gt;创建本地仓库文件夹：例F:\github
右键点击该文件夹，Git Bash Here，命令行输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hexo init myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;初始化完成！&lt;/p&gt;
&lt;h2 id=&#34;本地试运行&#34;&gt;本地试运行&lt;/h2&gt;
&lt;p&gt;1.进入博客根目录（myblog）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;2.安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;3.运行
本地运行(如果4000端口被占用，使用 hexo service -p 5000 修改端口)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时在浏览器输入 http://localhost:4000/ ,访问到博客界面&lt;/p&gt;
&lt;h2 id=&#34;部署在远程库&#34;&gt;部署在远程库&lt;/h2&gt;
&lt;p&gt;这里将其部署在github上&lt;/p&gt;
&lt;p&gt;1.创建Github账户&lt;/p&gt;
&lt;p&gt;略，随便百度一下&lt;/p&gt;
&lt;p&gt;2.创建github项目&lt;/p&gt;
&lt;p&gt;创建一个名为yourname.github.io的项目（yourname为你github名）&lt;/p&gt;
&lt;p&gt;3.生成密钥，用于ssh连接&lt;/p&gt;
&lt;p&gt;在本地，右键网站根目录，点击Git Bash 输入下列命令
yourname 即为github注册时的用户名
youremail 为注册时的邮箱账号
第三条命令生成密钥：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git config --global user.name &lt;span class=&#34;s2&#34;&gt;&amp;#34;yourname&amp;#34;&lt;/span&gt;
git config --global user.email &lt;span class=&#34;s2&#34;&gt;&amp;#34;yourEmail&amp;#34;&lt;/span&gt;
ssh-keygen -t rsa -C &lt;span class=&#34;s2&#34;&gt;&amp;#34;yourEmail&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此时在C:\Users下你的当前账户文件夹下会有一个 .ssh 文件，找到id_rsa.pub文件，复制里面的内容，粘贴至GitHub中（点击右上角用户头像下的Settings，之后点击左侧的SSH and GPG keys，找到New SSH key点击，输入title，并将之前复制的内容粘贴到下面的key中），最后点击Add SSH key，完成。&lt;/p&gt;
&lt;p&gt;4.修改配置文件&lt;/p&gt;
&lt;p&gt;去博客根目录下的_config.yml文件中，添加如下（yourname就是GitHub的用户名）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;deploy:
  type: git
  repo: git@github.com:yourname/yourname.github.io.git
  branch: master
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;5.将本地仓库同步到github&lt;/p&gt;
&lt;p&gt;在第一次生成以及部署之前，需要安装一个扩展：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;清除生成的静态网页缓存数据&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hexo clean
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;生成文章对应的静态页面&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hexo g
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;部署本地站点到github命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;hexo deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
            
            
            
            
            
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/categories/hexo/" term="Hexo" label="Hexo" />
                            
                        
                    
                
                    
                        
                            
                            
                            
                                <category scheme="https://bansxf.github.io/tags/blog/" term="blog" label="blog" />
                            
                        
                    
                
            
        </entry>
    
</feed>
